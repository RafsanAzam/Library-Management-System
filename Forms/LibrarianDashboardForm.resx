<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEBLAEsAAD/4QCIRXhpZgAATU0AKgAAAAgAAwEOAAIAAAA+AAAAMgEaAAUAAAAB
        AAAAcAEbAAUAAAABAAAAeAAAAABDb2xvciBwZW5jaWwgb24geWVsbG93IGJhY2tncm91bmQgIGJ1c2lu
        ZXNzIGNvbmNlcHQgY29weXNwYWNlAAAAASwAAAABAAABLAAAAAH/2wBDAAoHBwgHBgoICAgLCgoLDhgQ
        Dg0NDh0VFhEYIx8lJCIfIiEmKzcvJik0KSEiMEExNDk7Pj4+JS5ESUM8SDc9Pjv/2wBDAQoLCw4NDhwQ
        EBw7KCIoOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozv/wgAR
        CAFYAmQDAREAAhEBAxEB/8QAGgABAQADAQEAAAAAAAAAAAAAAAECAwQFBv/EABoBAQEAAwEBAAAAAAAA
        AAAAAAABAwQFAgb/2gAMAwEAAhADEAAAAfe+R3yAAABAoAAAAAAAAAAAAAAAAAAKgAAAAAAAAigAAACW
        ggAAARQAAAAAAAAAAAAAAAAAAAgoAAABAUECgAAACUUEKQABFAAAAAAAAAAAAAAAAAAAAKgAAAECgAAA
        AAQUItACAAAWAAAAAAAAAAAAAAAAAAAACCkAUAAAAQpKsSgABFFAAQABFAAAAAAAAAAAAAAAAAAAAAAA
        AAIABQAAAAiigBAEKCKAAAAAAAAAAAAAAAAAAAAAAAACUAAAACgAQAoCAAIFAAAAAAABCgAAAAAAhSCr
        AAAAAAEpCgACgAQApAAChAAEKQKAAAAAAAAQoAAAIUgoAABFAABKQoAoAgAAAAAAKAgAAARQAAAAAAAA
        QoIAKFiCrEoAACwAIKAABYAAAAAAAAUIAABYlIoAAAAAAAAABBQCAoAApAAEUEFAAogAAAAAoAIAoCAA
        BCkCgAAAAlWAJSAKQUAAAAUAAgAQFFAAEAAFAAACKLIAKAgAAAACKAACCgAAAAAUAAgKIACgIACgAQAA
        UIooIAAWQAUBAAAAALAAgKQCgAAAACkBQASKKQFACAFAEAAAqKAAAALIBQEAAAAAAsAAASgAAEKABQCF
        AEBSFAQApCgCAUhQigAAAAWQAUBAAAAAAigAAgoAAAAAoAAEAAAKAhRCoWACgBFAAAAAsgAoAQAAAAIo
        AAAIBQAAABQAAAIAAUAEAAAoARQAAABClkAFACAAAABFAAABKAQoIUACgAAQpAAAUAgAAFCKAAAABADK
        QAUAAIAAALAAAAEFIpKQoAAoAAgAAABQQAACgIoAAAEAAMpAKAhQQAAAIFAAAICglAAAAFAAAgAAAAAA
        AoRQAAIUgAAXKeQKAgKQAABFAAAJSKASgAAAUAACAAAAAAAACooAAgKAQKFIynkAUICkAAAFgAQoABKQ
        oAAAAoAhQQAAAAAAACooAEAAACgDKeQKAAgAACFIoAABAKAAAABYUAEAAAAAAAABLQABAAAoCgMvPkCg
        ABAAAEUAAAAgoAAAFIItABAAAAAAAABUUACAKAAoQoMvPkCgBAAAALAAAhQCUAAAACiApAAAAAAAABQg
        UACAKoCAAAz8+QBQAgAAAsAAAASgAAAUAQAAAAAAAACgABFAEAtAEAAAM/PkAUAIAAAEUEFWIKQoAAAo
        AEAAAAAAFABCgBFAAgFoEAAAAM/PkAAUAIAAEKsQUhQAAAKAIAAAAAKAAAAEUAAAQAWwAAAAgNk8oAAo
        AQFIAAAEKAABRAUgAAAApCgBFFQACKAAIABaIAACFIKGzz5CAAKAAEAAAAAABYAAAAAKQFACLSAAAAAA
        EAtQoQAhQQUhQ2eYRAAAoACAAAAAFAgAAAAFBCgAAWAAAAAAEAVQEAICkAoCGzzLIAAABSFCAAAAAogA
        AApAUABFqARQAAAAAIAFUBAAQUhQAgNvnyAAgAAAUAAIUkWkAAAFRagAEUAAAAAAAAQABVCAAEFAACAG
        zzKgAQAAAKAAACAAAUIoqRakKsAAAAAIUgAAAtCFQAAEFCFAIADZ5gqAIAAAAoAAAIAKgUAAAAAAAACA
        AAKQFUAIAAQUBAAACVt8QCoAgAAAUEAAAAoRQAAAAAAABAApCgEEt0ZffRi8AQAEAFCAAAgobfEAFQBA
        F9TG2+AGWfzrw+8pAAAoRQAAAAAAAIDmzYOjFnsoVjbl5gUiZpjszLR9ADk2s/Xq4BBQAgAAJQG3xAAB
        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
        YXwCgQVnQh51eCPlwEwnKhOxHAjXlgsnJsDrqgpgOBzpupHwnxHFeMrRQihhR+qRBWVftUOg/9oADAMB
        AAIAAwAAABAG222/JLJJLZJJJJJLbJZbbbbEkkEkkkkkzbJJJAW2225JJJZLZJJJJJbbLLbLbSWkkkkm
        0m7LJJJQAg229JJbZLbJZJJJZLbbZZbbaEkkkmyTZJJJL24AG221JJJLJJJJJJJJZJJJZJbbWn2bZZJL
        qq223YAC225JJJJJJJJJJJJJJJJJJLbTbbLJb/220kk7IC263JJJLJJJJJJJJJJJJJJJJbbJJJW2200g
        ADbAW235JJJZJJJLJJJJJJJZapJJZJJK+20gADbLPbA22+/JJZJJJJJLJJJJda2225JJK+2gBbbbbbb7
        AG2225JJJJJJJJLJbe1aq222pJa20kbbbbbdt/YG221XJJJJJJJJJJL23+22gm25LW2gbbft/sknbAG2
        2+7JJJJJVJXfL22220AIE2/0AADdtkkkkyPbAW22223pJJa222220AAEgbbAG2gALZtkyASSR7YA2222
        2pJbLe22222ikAA7DYAWkADZtsySTBJ7YA220222pJJKW22620AEADZZA2ggAbFkySSINL7YA222223J
        JJ622222gAADbbbAEDEbMkmKSRJNbbIC22223pJJJb22220CAABbbYADbbMkmRJKRPvbZAUm2225JJJK
        26X2mgAALLbbYAbbbkySRKJv/wD2wAAttttSSSSWvV9tJAAA2222yW225JkkSSf/AP8AbIECm223dJJJ
        bJW220kAABbbbbbbbMmSCJd//wD22AJBNtt6SSSmSVtptoAAA22222223ZkkS/af2G22RIJtttSSySSu
        ttttIAGC222222/fMSS//wD/ALLbYAC222+5JJJbW2220jAAbbbbbbbdtyBJ/wD/ANkAPsAALbbbkkkk
        l7bbaRTgAtttttts22ZAl/ssgIBtkgbbbbUkkskrbbbSQNhtttttts2ybIA/8AJJJv8AYAG222pJJJK2
        22kADbbbbb/vt8kknJL8ACSNNP7AAm223paLzW2mkAIbbb7NtsklkkxJr8ASXNJp/bYAG226r3222kgA
        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
</value>
  </data>
</root>